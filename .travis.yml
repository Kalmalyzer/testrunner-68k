
__common: &common_build
  # language: rust
  # rust: stable
  # cache: cargo
  language: cpp

stages:
  - build
  - deploy

matrix:

  include:
  - <<: *common_build
    os: linux
    dist: xenial

    name: Linux build
    stage: build

    before_install:
    # Build Tundra from source & install
    - git clone --recursive https://github.com/deplinenoise/tundra.git
    - cd tundra
    - make
    - sudo make install
    - cd ..

    script:

    # Build Musashi
    - tundra2

    # Run testrunner-68k tests
#    - cargo test

  - <<: *common_build
    os: windows

    name: Windows build
    stage: build

    before_install:
    # Fetch Tundra installer
    - cmd.exe /C 'start /wait wget https://github.com/deplinenoise/tundra/releases/download/v2.09/Tundra-Setup.exe'
    # Run Tundra installer
    - cmd.exe /C 'start /wait Tundra-Setup.exe /S'
    # Add Tundra binary path to current install path (as the installer does not refresh the current shell's env vars)
    - PATH="$PATH:/c/Program Files/Tundra 2.0/bin"

    script:

    # Setup VC environment variables. We assume that VS 2017 is already installed on the machine.
    # Then, build Musashi
    - cmd.exe /C '"C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvarsall.bat" amd64 && tundra2'

    # Run testrunner-68k tests
#    - cargo test

  - language: shell
    os: linux
    dist: xenial

    name: Deploy
    stage: deploy

    if: "${TRAVIS_TAG::8}" = 'release-'

    script:
    - zip -r testrunner-68k-source.zip . -x testrunner-68k-source.zip -x .git

    deploy:
      provider: releases
      api_key:
        secure: TODO
      file:
        - testrunner-68k-source.zip

      on:
        tags: true
